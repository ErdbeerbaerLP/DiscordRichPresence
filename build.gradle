buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        mavenCentral()
    }

    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7.32'
    }
}
plugins {
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id 'com.github.johnrengelman.shadow' version "7.0.0"
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

version = '3.0.0'
group = 'de.erdbeerbaerlp.discordrpc' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'discordrpc'

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
configurations {
    shade
    compileOnly.extendsFrom(shade)
}
shadowJar {
    classifier = '1.19'
    configurations = [project.configurations.shade]
    relocate "com.moandjiezana", "drpc.com.moandjiezana"
    relocate 'com.google.gson', 'dcshadow.com.google.gson'
}

minecraft {
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'official', version: '1.19'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    //accessTransformer = file('my_at.cfg')

    // default run configurations.
    // these can be tweaked, removed, or duplicated as needed.
    runs {
        client = {
            // recommended logging data for a userdev environment
            properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
            // recommended logging level for the console
            properties 'forge.logging.console.level': 'info'
            workingDirectory project.file('run').canonicalPath
            mods {
                discordrpc {
                    source sourceSets.main
                }
            }
        }
        server = {
            // recommended logging data for a userdev environment
            properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
            // recommended logging level for the console
            properties 'forge.logging.console.level': 'info'
            workingDirectory project.file('run').canonicalPath
            mods {
                discordrpc {
                    source sourceSets.main
                }
            }
        }
    }
}
mixin {
    add sourceSets.main, 'mixins.drpc.refmap.json'
    config 'mixins.drpc.json'
}

repositories {
    maven { url 'https://jitpack.io' }
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven'
    }
    flatDir {
        dirs 'libs'
    }
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }


    maven { url "https://repo.erdbeerbaerlp.de/repository/maven-public/" }
}

dependencies {
	//Forge
    minecraft 'net.minecraftforge:forge:1.19-41.0.87'
    //Discord game sdk
    shade 'com.github.JnCrMx:discord-game-sdk4j:v0.5.5'
    shade("de.erdbeerbaerlp:toml4j:2073e86")
    // Apply Mixin AP
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    compileOnly('de.erdbeerbaerlp:guilib:2.0.2')
}
reobf {
    shadowJar {
        dependsOn tasks.createMcpToSrg
        mappings = tasks.createMcpToSrg.outputs.files.singleFile
    }
}
artifacts {
    archives tasks.shadowJar
}
// Example for how to get properties into the manifest for reading by the runtime..
jar {
    classifier = "1.19"
    manifest {
        attributes(["Specification-Title": "discordrpc",
                    "Specification-Vendor": "discordrpc",
                    "Specification-Version": "3.0",
                    "Implementation-Title": project.name,
                    "Implementation-Version": "${version}",
                    "Implementation-Vendor" :"discordrpc",
                    'Target-Platforms': 'win32-x86-64, win32-x86, linux-x86-64, darwin',
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")],)
    }
}
curseforge {
    // $GRADLE_USER_HOME/gradle.properties
    if (project.hasProperty('curseforge.apikey')) {
        apiKey = getProperty("curseforge.apikey")
        project {
            id = '300569'
            changelog = project.changelog
            releaseType = 'release'
            addGameVersion '1.19'
            mainArtifact(jar) {
                displayName = "DiscordRichPresence-$version (MC 1.19)"
            }
            options {
                detectNewerJava = true
            }
        }
    }
}
tasks.curseforge.dependsOn(build)